#[allow(non_snake_case)]
#[test]
fn {name}() {{
    let mut cmd = Command::cargo_bin("jip").unwrap();
    let assert = cmd
        .arg(r#"{path}"#)
        .arg("verify")
        .arg("-d")
        .arg("30")
        .assert();
    assert
        .code(predicate::eq(0).or(predicate::eq(3))); // verdict is either true or unknown

    // repeat test with simplifier
    let mut cmd_simple = Command::cargo_bin("jip").unwrap();
    let assert_simple = cmd_simple
        .arg("-a")
        .arg("--expression-caching")
        .arg("-i")
        .arg("2")
        .arg(r#"{path}"#)
        .arg("verify")
        .assert();
    assert_simple
        .code(predicate::eq(0).or(predicate::eq(3))); // verdict is either true or unknown
}}