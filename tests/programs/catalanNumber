// adapted code from https://www.geeksforgeeks.org/program-nth-catalan-number/?ref=lbp
class Main {
 

 
    // Driver Code
    static void main(int n)
    {
        assume n >= 0;
        int recRes := Main.recCatalan(n);
        int binRes := Main.binCatalan(n);
        assert recRes == binRes;
    }

    // A recursive function to find nth catalan number
    static int recCatalan(int n)
    {
        int res := 0;
 
        // Base case
        if (n <= 1) {
            return 1;
        } else ;
        int i := 0;
        while (i < n) {
            int x := Main.recCatalan(i);
            int y := Main.recCatalan(n - i - 1);
            res := res + x * y;
            i := i + 1;
        }
        return res;
    }


 
    // A Binomial coefficient based function to find nth catalan
    static int binCatalan(int n)
    {
        // Calculate value of 2nCn
        int c := Main.binomialCoeff(2 * n, n);
     
        // return 2nCn/(n+1)
        return c / (n + 1);
    }

    // Returns value of Binomial Coefficient C(n, k)
    static int binomialCoeff(int n, int k)
    {
        int res := 1;
     
        // Since C(n, k) = C(n, n-k)
        if (k > n - k) k := n - k; else ;
     
        // Calculate value of [n*(n-1)*---*(n-k+1)] /
        // [k*(k-1)*---*1]
        int i := 0;
        while (i < k) {
            res := res * (n - i);
            res := res / (i + 1);
            i := i + 1;
        }
     
        return res;
    }
}