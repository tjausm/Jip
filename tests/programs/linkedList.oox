class Main {
    
    static void main(Node p){

        bool mem := p.member(1);
        //assert mem == false;

        int len := p.length();
        assert len < 1;

        Node min := p.min();
        int minval := min.value;
        int pval := p.value;
        assert minval > pval;

        
    }
}

//
// Linked-list, with several methods.
//
class Node {
    -int value ;
    -Node next ;

    Node(int value, Node next){
        this.value := value;
        this.next := next;
    }

    bool member(int x) {
        int v := this.value ;
        
        if(x==v) return true ;
        else {
            Node n := this.next ;
            bool b := n.member(x) ;
            return b ;
        };
    }

    int length() {
        Node n := this.next ;
        if (n==null) return 1 ;
        else {
            int k := n.length() ;
            return k+1 ;
        };
    }

    Node min()
    {
        Node p := this ;
        Node min := p ;
        int minval := min.value ;

        while ( p != null) {
           int value := p.value ;
           if ( value < minval) {
                min := p ;
                minval := value ;
           } else ;
           p := p.next;
        }
       return min ;
    }

}
