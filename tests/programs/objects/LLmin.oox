class Main {
    
    static void main(Node p)
    requires (p != null)
    {
        // Node min := p.min();
        bool isMin := Main.isMin(0, p); 
        assert isMin;
    }

    static bool isMin(int min, Node p){
        bool isMin := true;
        assert true;
        Node next := p.next;
        while (next != null) {
            int val := p.value;
            isMin := val < min || isMin;
            next := next.next;
            }
        return isMin ;
    }
}

//
// Linked-list, with several methods.
//
class Node {
    -int value ;
    -Node next ;

    Node(int value, Node next){
        this.value := value;
        this.next := next;
    }

    Node min()
    {
        Node p := this ;
        Node min := p ;
        int minval := min.value ;

        while ( p != null) {
           int value := p.value ;
           if ( value < minval) {
                min := p ;
                minval := value ;
           } else ;
           p := p.next;
        }
       return min ;
    }

}
